name: Build and Unit Tests

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Start timer
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            .next/cache
          key: npm-${{ hashFiles('package-lock.json') }}-build
          restore-keys: |
            npm-

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run Build
        run: npm run build

      - name: Calculate Build duration
        run: |
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "DURATION=$DURATION" >> $GITHUB_ENV
          MIN=$((DURATION/60))
          SEC=$((DURATION%60))
          echo "## ðŸš€ Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status | Duration |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ job.status }} | ${MIN}m ${SEC}s |" >> $GITHUB_STEP_SUMMARY

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Start timer
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Restore NPM cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}-build
          restore-keys: |
            npm-

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run Unit Tests
        run: npm run test

      - name: Calculate Unit Test duration
        run: |
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "DURATION=$DURATION" >> $GITHUB_ENV
          MIN=$((DURATION/60))
          SEC=$((DURATION%60))
          echo "## ðŸš€ Unit Tests Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status | Duration |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests | ${{ job.status }} | ${MIN}m ${SEC}s |" >> $GITHUB_STEP_SUMMARY
